version: "3"

services:
  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.7
    container_name: traefik
    restart: always
    # env_file: env
    command:
      - --global.sendAnonymousUsage=false
      # By default, the level is set to ERROR. Alternative logging levels are 
      # DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
      # - --log.level=DEBUG
      # Enable Dashboard via /dashboard/
      - --api.insecure=false
      - --api.dashboard=true
      - --api.debug=true
      # We are using Docker
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # Listen on port 8080 (traefik Dashboard)
      - --entrypoints.traefik_https.address=:8080
      # Listen on port 80 (http)
      - --entrypoints.web.address=:80
      # Listen on port 443 (https)
      - --entrypoints.websecure.address=:443
      # Automaticly redirect from http to https
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      # Listen on port 3306 (MySQL)
      # - --entrypoints.mysql.address=:3306

      # Enable LetsEncrypt
      # Use staging server for test cases
      #- --certificatesresolvers.letsencrypt.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      # LetsEncrypt global configuration
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
     # Use EITHER
     # LetsEncrypt HTTP-Challenge
      #- --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      #- --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      ######
      # OR
      # LetsEncrypt DNS-Challenge via cloudflare
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnsChallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.dnsChallenge.delayBeforeCheck=60
      ######
      - --entrypoints.websecure.http.tls.domains[0].main=${CUSTOM_HOSTNAME}
      - --entrypoints.websecure.http.tls.domains[0].sans=*.${CUSTOM_HOSTNAME}
      # Enable Access Log
      - --accesslog.filepath=/var/log/www/access.log
    ports:
      # The HTTP port
      - "80:80"
      # The HTTPS port
      - "443:443"
      # The Web UI (enabled by --api.insecure=false)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # LetsEncrypt Configuration Storage
      - ./letsencrypt:/letsencrypt
      # Enable Access Log
      - ./logs/:/var/log/www/
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik_https.entrypoints=traefik_https
      - traefik.http.routers.traefik_https.rule=Host(`${CUSTOM_HOSTNAME}`)
      - traefik.http.routers.traefik_https.rule=Host(`${CUSTOM_HOSTNAME}`) && PathPrefix(`/api`) || PathPrefix(`/dashboard`)
      - traefik.http.routers.traefik_https.tls=true
      - traefik.http.routers.traefik_https.tls.certResolver=letsencrypt
      - traefik.http.routers.traefik_https.service=api@internal
      # Username: admin
      # Password: EnterPasswordHere
      # Encrypt Password via 'echo $(htpasswd -nB nadmin) | sed -e s/\\$/\\$\\$/g'
      #- traefik.http.routers.traefik_https.middlewares=traefik-auth
      #- traefik.http.middlewares.traefik-auth.basicauth.users=admin:EnterEncryptedPasswordHere
    networks:
      - traefik_ext

networks:
  traefik_ext:
    external: true
  traefik_int:
    internal: true
