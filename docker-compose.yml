version: "3"

services:
  traefik:
    # The official v2 Traefik docker image
    image: traefik:latest
    container_name: traefik
    restart: always
    env_file: .env
    command:
      # Send usage statistics (or not)
      - "--global.sendAnonymousUsage=false"
      # By default, the level is set to ERROR. Alternative logging levels are 
      # DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
      - "--log.level=WARN"
      # Enable Access Log
      - "--accesslog.filepath=/var/log/www/access.log"
      # Enable Dashboard
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--api.debug=true"
      # We are using Docker
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # (Optional) Set default hostname if not given explicitly
      - "--providers.docker.defaultRule=Host(`${CUSTOM_HOSTNAME}`)"
      # Listen on port 80 (http)
      - "--entrypoints.web.address=:80"
      # Listen on port 8080 (traefik Dashboard)
      #- "--entrypoints.dashboard.address=:8080"
      # Watch dynamic configuration file
      - "--providers.file.directory=/conf"
      - "--providers.file.watch=true"
    ports:
      # The HTTP port
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      # The HTTPS port
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      # The Web UI (enabled by --api.insecure=true)
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
      #- "80:80"
      #- "443:443"
      #- "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # Dynamic configuration files
      - "./conf:/conf"
      # Enable Access Log
      - "./logs/:/var/log/www/"
    labels:
      # Enable Traefik
      - "traefik.enable=true"
      # Set Network to use
      #- "traefik.docker.network=traefik_ext,traefik_int"
      # Enable gzip compression
      - "traefik.http.middlewares.gzip.compress=true"
      # Load dynamic config
      - "traefik.http.routers.dashboards.middlewares=gzip"
      # Username: nadmin
      # Password: EnterPasswordHere
      # Encrypt Password via 'echo $(htpasswd -nB nadmin) | sed -e s/\\$/\\$\\$/g'
      #- "traefik.http.routers.dashboards.middlewares=traefik-auth"
      #- "traefik.http.middlewares.traefik-auth.basicauth.users=nadmin:EnterEncryptedPasswordHere"
    networks:
      - "traefik_ext"
      #- "traefik_int"

  whoami:
    image: "traefik/whoami"
    container_name: "whoami"
    restart: "unless-stopped"
    depends_on:
      - "traefik"
    labels:
      # Enable Traefik
      - "traefik.enable=true"
      # Set Network to use
      #- "traefik.docker.network=traefik_ext"
      # Enable gzip compression
      - "traefik.http.middlewares.gzip.compress=true"
      # Load dynamic config
      #- "traefik.http.routers.whoami.middlewares=secHeaders@file,gzip"
      - "traefik.http.routers.whoami.middlewares=gzip"
      - "traefik.http.routers.whoami.entrypoints=web"
      #- "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.rule=Host(`whoami.${CUSTOM_HOSTNAME}`)"
      #- "traefik.http.routers.whoami.tls.certresolver=le_http_challenge"
    networks:
      - "traefik_ext"

# Create networks manually before starting this compose
networks:
  # docker network create traefik_ext
  traefik_ext:
    external: true
  # docker network create traefik_int --internal
  #traefik_int:
  #  external: true
